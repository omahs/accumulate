import BN from "bn.js";

// DO NOT EDIT. Generated by gitlab.com/accumulatenetwork/accumulate/tools/cmd/gen-types.

{{  define "objectify"}}
{{-   if .Repeatable -}}
this.{{lcName .Name}}?.map(v => {{objectify . "v"}})
{{-   else}}
{{-     if .IsOptional}}this.{{lcName .Name}} && {{end}}{{objectify . (print "this." (lcName .Name))}}
{{-   end}}
{{- end}}

{{- range .Unions}}
{{-   if not (eq .Type "result")}}
export type {{.Interface}} =
	{{- range .Members}}
	| {{.FullName false true}}
	{{- end}};
{{-   end}}
{{- end}}

{{  range .Types -}}
export class {{.Name}} {
  {{- if .IsUnion}}
  public readonly type = {{.UnionType}}.{{.UnionValue}};
  {{- end}}
  {{- range .Fields}}
  {{-   if and .IsMarshalled (not .Virtual)}}
  {{-     if .IsEmbedded}}
  {{-       range .TypeRef.Fields}}
  public {{lcName .Name}}{{if .IsOptional}}?{{end}}: {{resolveType .}};
  {{-       end}}
  {{-     else}}
  public {{lcName .Name}}{{if .IsOptional}}?{{end}}: {{resolveType .}};
  {{-     end}}
  {{-   end}}
  {{- end}}

  asObject() {
    return {
      {{- if .IsUnion}}
        type: this.type,
      {{- end}}
      {{- range .Fields}}
      {{-   if and .IsMarshalled (not .Virtual)}}
      {{-     if .IsEmbedded}}
      {{-       range .TypeRef.Fields}}
        {{lcName .Name}}: {{template "objectify" .}},
      {{-       end}}
      {{-     else}}
        {{lcName .Name}}: {{template "objectify" .}},
      {{-     end}}
      {{-   end}}
      {{- end}}
    }
  }
}

{{  end}}